<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
 	xmlns:c="http://www.springframework.org/schema/c"
 	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
 	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/cache 
	http://www.springframework.org/schema/cache/spring-cache.xsd">
	
	<context:component-scan base-package="com.sohu.auto.cache"/>
	<context:property-placeholder location="classpath:applicationConfig_dev.properties" ignore-unresolvable="true"/>
	
	<cache:annotation-driven />
	
 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
	 	<!-- 控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取；如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽) -->
        <property name="maxActive" value="${redis.maxActive}" /> 
        <!-- 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例。 --> 
        <property name="maxIdle" value="${redis.maxIdle}" />  
        <!-- 表示当borrow(引入)一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException； -->
        <property name="maxWait" value="${redis.maxWait}" />  
        <!-- 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />  
    </bean> 
    
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="usePool" value="true"></property>  
        <property name="hostName" value="${redis.host}" />  
        <property name="port" value="${redis.port}" />  
        <property name="password" value="${redis.pass}" />
        <!-- the connect database ,redis default have 16 databases ,the current is 0 database --> 
        <property name="database" value="${redis.default.db}"></property>  
        <property name="timeout" value="${redis.timeout}" /> 
        <constructor-arg index="0" ref="jedisPoolConfig" />  
    </bean> 
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
	 	<!-- 
	 	<property name="keySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
	    </property>  
	    <property name="valueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
	    <property name="hashKeySerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
	    <property name="hashValueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>  
	     -->
	</bean>
	
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager" c:template-ref="redisTemplate" p:usePrefix="true"/>
	
</beans>